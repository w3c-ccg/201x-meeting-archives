[2019-06-06T20:04:14.237Z]	<oliver>	present+ oliver_terbu
[2019-06-06T20:04:55.139Z]	<markus_sabadello>	present+ markus_sabadello
[2019-06-06T20:05:15.179Z]	<rhiaro>	present+
[2019-06-06T20:09:29.373Z]	<markus_sabadello>	https://docs.google.com/document/d/1qYBaXQMUoB86Alquu7WBtWOxsS8SMhp1fioYKEGCabE/
[2019-06-06T20:10:36.526Z]	<chrisboscolo>	q+
[2019-06-06T20:10:57.601Z]	<JoeAndrieu>	q+ to invite co-editors
[2019-06-06T20:11:15.316Z]	<chrisboscolo>	markus, if you post a link to the google doc, I will help take notes
[2019-06-06T20:12:44.750Z]	<rhiaro>	chrisboscolo could you take notes in here please?
[2019-06-06T20:12:46.400Z]	<JoeAndrieu>	@chrisboscolo: docs.google.com/document/d/1qYBaXQMUoB86Alquu7WBtWOxsS8SMhp1fioYKEGCabE/edit
[2019-06-06T20:12:56.062Z]	<markus_sabadello>	q?
[2019-06-06T20:12:58.352Z]	<JoeAndrieu>	(even better. do it here)
[2019-06-06T20:13:06.176Z]	<markus_sabadello>	ack chrisboscolo
[2019-06-06T20:13:46.304Z]	<markus_sabadello>	ack JoeAndrieu
[2019-06-06T20:14:08.808Z]	<markus_sabadello>	JoeAndrieu: want to provide context and mention next steps around decentralized rubrics
[2019-06-06T20:14:47.028Z]	<markus_sabadello>	JoeAndrieu: rather than defining decentralization simply as opposite of centralization, try to articulate concrete benefits we want for DIDs
[2019-06-06T20:15:03.914Z]	<markus_sabadello>	JoeAndrieu: example: one rubric is whether there are people who are willing to take fiduciary responsibility
[2019-06-06T20:15:44.718Z]	<markus_sabadello>	JoeAndrieu: rubrics are broader than just about "decentralization"
[2019-06-06T20:16:02.014Z]	<markus_sabadello>	JoeAndrieu: next step could be to establish this as an official CCG work item
[2019-06-06T20:16:11.286Z]	<markus_sabadello>	JoeAndrieu: need additional editor
[2019-06-06T20:17:22.210Z]	<oliver>	q+
[2019-06-06T20:17:40.757Z]	<mtfk_robert>	q+
[2019-06-06T20:17:53.994Z]	<chrisboscolo>	markus_sabadello: Friends at Jolocom have an interest in join on this [effort]
[2019-06-06T20:17:56.036Z]	<markus_sabadello>	ack oliver
[2019-06-06T20:18:08.939Z]	<chrisboscolo>	markus_sabadello: I will take an action on that
[2019-06-06T20:18:14.512Z]	<drummond>	present+
[2019-06-06T20:18:20.329Z]	<chrisboscolo>	present+
[2019-06-06T20:18:50.805Z]	<chrisboscolo>	drummond: volunteers for that
[2019-06-06T20:19:08.660Z]	<chrisboscolo>	oliver: I would like to help with that
[2019-06-06T20:19:17.958Z]	<drummond>	q?
[2019-06-06T20:19:19.184Z]	<markus_sabadello>	JoeAndrieu: will discuss the scope of the rubrics work item
[2019-06-06T20:19:21.589Z]	<drummond>	q+
[2019-06-06T20:19:33.892Z]	<markus_sabadello>	ack mtfk_robert
[2019-06-06T20:19:42.179Z]	<drummond>	ack mtfk_robert
[2019-06-06T20:20:02.071Z]	<rhiaro>	JoeAndrieu, I don't know if I have time for more meetings in the immediate future, but could you loop me in on the initial email please? :)
[2019-06-06T20:20:24.403Z]	<markus_sabadello>	mtfk_robert: DIDs issued by a central company like Facebook is something we don't want
[2019-06-06T20:20:41.662Z]	<markus_sabadello>	mtfk_robert: what about a more local scale, e.g. you issue DIDs for everyone in your family?
[2019-06-06T20:21:32.065Z]	<markus_sabadello>	mtfk_robert: in this case, DIDs are issued by someone else on your behalf, but overall it's still decentralized
[2019-06-06T20:22:29.013Z]	<markus_sabadello>	JoeAndrieu: do you mean each family would create its own DID method?
[2019-06-06T20:22:51.274Z]	<mtfk_robert>	q+
[2019-06-06T20:22:59.176Z]	<drummond>	q?
[2019-06-06T20:23:02.576Z]	<markus_sabadello>	ack drummond
[2019-06-06T20:23:43.366Z]	<markus_sabadello>	drummond: correct language: DIDs are not "issued". credentials are "issued"
[2019-06-06T20:24:10.336Z]	<markus_sabadello>	drummond: someone could "register" a DID one someone else's behalf. in Sovrin this is called "guardianship".
[2019-06-06T20:24:29.624Z]	<markus_sabadello>	drummond: perhaps certain large companies would offer "guardianship" for the public?
[2019-06-06T20:25:02.885Z]	<markus_sabadello>	drummond: i like the idea of rubrics being part of the spec? in a non-normative section?
[2019-06-06T20:25:26.098Z]	<markus_sabadello>	JoeAndrieu: not sure if this would go into the charter or the spec.
[2019-06-06T20:25:50.191Z]	<markus_sabadello>	JoeAndrieu: perhaps in the Introduction section of the spec. describe what we are trying to achieve.
[2019-06-06T20:26:08.358Z]	<drummond>	+1 to the intent of DIDs being in the introduction to the spec, and then the rubrics being referenced as an external document.
[2019-06-06T20:26:14.990Z]	<markus_sabadello>	JoeAndrieu: the rubrics work could also become an external document
[2019-06-06T20:27:29.237Z]	<markus_sabadello>	JoeAndrieu: based on what's in the rubrics, we can articulate what we think are important properties for DID methods
[2019-06-06T20:27:39.394Z]	<kyle_denhartog>	q+
[2019-06-06T20:27:45.558Z]	<markus_sabadello>	drummond: some rubrics may be conflicting
[2019-06-06T20:28:07.087Z]	<markus_sabadello>	ack mtfk_robert
[2019-06-06T20:28:11.296Z]	<drummond>	ack mtfk_robert
[2019-06-06T20:28:19.864Z]	<markus_sabadello>	mtfk_robert: i like the idea of having a method per family
[2019-06-06T20:28:50.317Z]	<drummond>	-1 to a "method per family"â€”that's not what DID methods are for.
[2019-06-06T20:28:50.727Z]	<markus_sabadello>	mtfk_robert: a state can issue (register?) DID on behalf of its citizens, if they don't have the means or know-how to do so
[2019-06-06T20:29:23.426Z]	<drummond>	ack kyle_denhartog
[2019-06-06T20:29:29.208Z]	<markus_sabadello>	mtfk_robert: also agree with JoeAndrieu that the answer to some decentralization questions depends on who is asking the question
[2019-06-06T20:30:02.158Z]	<drummond>	q+
[2019-06-06T20:30:02.857Z]	<markus_sabadello>	kyle_denhartog: some rubrics may be qualitative, other quantitative. if we identify quantitative rubrics, do we intend to include them in the spec?
[2019-06-06T20:30:15.584Z]	<drummond>	To talk about peer DIDs
[2019-06-06T20:30:26.215Z]	<markus_sabadello>	JoeAndrieu: it's problematic to include things in the spec that give the impression of establishing a rating or reputation system
[2019-06-06T20:30:44.022Z]	<drummond>	ack drummond
[2019-06-06T20:31:42.222Z]	<markus_sabadello>	drummond: we need to keep in mind the use of "peer" DIDs, which are as decentralized as possible. they don't use public blockchains.
[2019-06-06T20:32:00.809Z]	<drummond>	q?
[2019-06-06T20:32:10.689Z]	<markus_sabadello>	drummond: the discussion around "decentralization" needs to be aware of "peer" DIDs which are gaining momentum.
[2019-06-06T20:32:40.716Z]	<drummond>	+1 to call this new group the Rubrics Task Force
[2019-06-06T20:33:54.523Z]	<drummond>	scribe: drummond
[2019-06-06T20:34:15.596Z]	<oliver>	q+
[2019-06-06T20:34:50.235Z]	<drummond>	markus_sabadello: our first issue is a holdover from last week, PR 201. Oliver submitted an update today.
[2019-06-06T20:35:00.737Z]	<markus_sabadello>	ack oliver
[2019-06-06T20:35:30.848Z]	<drummond>	...the proposed resolution is to allow other public key types.
[2019-06-06T20:36:10.694Z]	<markus_sabadello>	q+
[2019-06-06T20:36:14.730Z]	<drummond>	oliver: After he did the PR, he found that the Linked Data Signatures registry did not include all the key types in the list already in the DID spec.
[2019-06-06T20:36:36.853Z]	<drummond>	...so several need to be added, including the Ethereum address public key type.
[2019-06-06T20:36:54.547Z]	<markus_sabadello>	ack markus_sabadello
[2019-06-06T20:37:19.756Z]	<drummond>	...He recommends getting the registry updated, but asked if others think it needs to be updated before approving the PR.
[2019-06-06T20:37:30.579Z]	<drummond>	drummond: No, we can go ahead and merge the PR.
[2019-06-06T20:37:38.570Z]	<drummond>	markus_sabadello: Agreed.
[2019-06-06T20:37:44.454Z]	<drummond>	oliver: Agreed
[2019-06-06T20:38:09.114Z]	<drummond>	markus_sabadello: So PR 201 will be merged.
[2019-06-06T20:39:18.930Z]	<drummond>	...next on the agenda is PR 191 on the service-type matrix parameter
[2019-06-06T20:40:32.874Z]	<drummond>	...he explained that there is general consensus that being able to select service endpoints by type is a valuable feature.
[2019-06-06T20:40:49.442Z]	<dmitriz>	q+
[2019-06-06T20:41:00.945Z]	<kyle_denhartog>	q+
[2019-06-06T20:41:51.097Z]	<drummond>	jonathan: asked about using JSON pointers in a fragment
[2019-06-06T20:42:34.275Z]	<markus_sabadello>	ack dmitriz
[2019-06-06T20:42:35.903Z]	<drummond>	ack dmitriz
[2019-06-06T20:43:40.561Z]	<drummond>	dmitriz: Agrees with Jonathan that JSON pointer is a useful tool, but a service-type parameter would do something slightly different.
[2019-06-06T20:44:09.013Z]	<drummond>	...service-type would allow querying the service blocks by service type.
[2019-06-06T20:45:57.207Z]	<drummond>	...Dmitri asked if service ID could be used for that typing
[2019-06-06T20:46:57.897Z]	<markus_sabadello>	q+
[2019-06-06T20:47:04.933Z]	<markus_sabadello>	ack kyle_denhartog
[2019-06-06T20:47:26.841Z]	<drummond>	drummond: The issue is that service ID, like all ID elements, must be unique within a JSON documet
[2019-06-06T20:47:43.391Z]	<drummond>	dmitriz: Asked for the canonical use case for service-type
[2019-06-06T20:47:57.120Z]	<markus_sabadello>	ack markus_sabadello
[2019-06-06T20:48:12.540Z]	<drummond>	drummond: It is selection of a hub service, since users by default will have more than one (redundancy is needed)
[2019-06-06T20:48:25.229Z]	<drummond>	dimtriz: Okay, understood
[2019-06-06T20:48:41.885Z]	<mtfk_robert>	q+
[2019-06-06T20:49:19.977Z]	<drummond>	kyle_denhartog: Asked if service endpoints could provide a service offering dynamic DNS
[2019-06-06T20:49:37.684Z]	<drummond>	markus_sabadello: Yes, you could do that, or you could get multiple service endpoints from a DID document
[2019-06-06T20:49:53.022Z]	<markus_sabadello>	q?
[2019-06-06T20:49:58.290Z]	<markus_sabadello>	ack mtfk_robert
[2019-06-06T20:51:26.585Z]	<markus_sabadello>	q+
[2019-06-06T20:51:34.421Z]	<markus_sabadello>	ack markus_sabadello
[2019-06-06T20:51:37.714Z]	<drummond>	mtfk_robert: You can have multiple providers of a service, and that can be another example of why needing service selection by type
[2019-06-06T20:51:48.967Z]	<drummond>	drummond: Yes, that's another good reason
[2019-06-06T20:52:17.075Z]	<drummond>	markus_sabadello: He also supports the need for the service-type parameter.
[2019-06-06T20:53:25.833Z]	<drummond>	...another use of service selection by type is for external parties to be able to programmatically select a specific kind of service without knowing the ID of that service endpoint.
[2019-06-06T20:54:19.636Z]	<drummond>	...in this case the service type may not be part of the DID URLâ€”the other party only needs the DID, and they they can algorithmically compose the DID URL that would access that specific service.
[2019-06-06T20:54:27.731Z]	<drummond>	q+
[2019-06-06T20:55:21.285Z]	<drummond>	To endorse about the entire philosophy of matrix parameters enabling programmatic composition of DID URLs
[2019-06-06T20:55:30.219Z]	<drummond>	ack drummond
[2019-06-06T20:55:31.771Z]	<markus_sabadello>	ack drummond
[2019-06-06T20:56:48.916Z]	<drummond>	q?
[2019-06-06T20:57:04.788Z]	<dmitriz>	+1
[2019-06-06T20:57:09.529Z]	<JoeAndrieu>	+1
[2019-06-06T20:58:08.703Z]	<drummond>	drummond: +1 to what Markus said. Very useful to be able to algorithmically compose DID URLs
[2019-06-06T20:58:28.489Z]	<drummond>	...asked if we had consensus on the service-type parameter?
[2019-06-06T20:58:35.459Z]	<drummond>	...consensus was yes.
[2019-06-06T20:58:54.588Z]	<drummond>	So PR 191 will be merged.
[2019-06-06T20:59:05.474Z]	<kyle_denhartog>	q+
[2019-06-06T20:59:20.700Z]	<drummond>	topic: PR 192 on the "key" parameter
[2019-06-06T21:00:39.292Z]	<markus_sabadello>	ack kyle_denhartog
[2019-06-06T21:00:54.319Z]	<drummond>	markus_sabadello: Introduced the case for the "key" matrix parameter by saying that it might seem redundant because you can select a key (or any other DID document object) using a fragment.
[2019-06-06T21:01:39.746Z]	<drummond>	kyle_denhartog: Asked whether a resolver would provide a standard error if there was a request for a specific key type
[2019-06-06T21:01:53.342Z]	<mtfk_robert>	For type empty array for id "null" or 404 ;)
[2019-06-06T21:02:26.244Z]	<drummond>	markus_sabadello: Errors in resolution are another topic
[2019-06-06T21:02:31.933Z]	<drummond>	q?
[2019-06-06T21:05:07.402Z]	<drummond>	markus_sabadello: Explained that while it seems like having a "key" parameter might be analogous to the case for a service parameter, however there is not the same case for being able to pass a service endpoint a path/querty/fragment.
[2019-06-06T21:06:06.148Z]	<drummond>	...so the primary reason for the "key" parameter would be if the DID URL author wants to address the key as a primary resource and not a secondary resource that's under a fragment.
[2019-06-06T21:06:24.241Z]	<drummond>	q+
[2019-06-06T21:06:41.954Z]	<mtfk_robert>	q+
[2019-06-06T21:06:54.161Z]	<drummond>	ack drummond
[2019-06-06T21:07:51.141Z]	<markus_sabadello>	drummond: reason for "key" parameter: developers can construct DID URLs that refer directly to a "primary resource" (the key), rather than a "secondary resource" under the "primary resource" which is the DID Document
[2019-06-06T21:08:10.781Z]	<mtfk_robert>	q-
[2019-06-06T21:08:19.729Z]	<dmitriz>	I'd like to provide a counter-argument, though.
[2019-06-06T21:08:33.136Z]	<dmitriz>	in the DID Spec, when we say authentication: [ { id: "id": "did:example:123456789abcdefghi#keys-1" } ]
[2019-06-06T21:09:48.139Z]	<rhiaro>	yeah, in jsonld/rdf at least, the uri is opaque. There's no such thing as primary/secondary resource just because the uri is a subset of another
[2019-06-06T21:09:51.643Z]	<markus_sabadello>	dmitriz: in the DID spec we consider those fragment references "primary resources", and we use them e.g. for "authentication" and "controller"
[2019-06-06T21:10:03.264Z]	<dmitriz>	+1 to what rhiaro said
[2019-06-06T21:11:50.302Z]	<markus_sabadello>	drummond: to kyle_denhartog: is there a need in HL aries / DIDComm to reference specific keys?
[2019-06-06T21:12:10.836Z]	<markus_sabadello>	kyle_denhartog: yes we need to reference specific keys; also at specific points in time, so we know exactly which key was used to encrypt a message
[2019-06-06T21:13:22.235Z]	<dmitriz>	using a point-in-time matrix param + hash fragment for key id would solve that use case though
[2019-06-06T21:14:02.612Z]	<drummond>	drummond: asked who on the call would want to be able address a key using a parameter?
[2019-06-06T21:14:30.380Z]	<drummond>	jonathan: favored being able to address it with a parameter so the fragment could be used for something else
[2019-06-06T21:15:02.537Z]	<drummond>	q?
[2019-06-06T21:15:28.528Z]	<markus_sabadello>	q+
[2019-06-06T21:15:59.358Z]	<markus_sabadello>	mtfk_robert: doesn't hurt to have both options (matrix parameter, or fragment), better to have it for consistency
[2019-06-06T21:16:07.613Z]	<markus_sabadello>	ack markus_sabadello
[2019-06-06T21:16:12.180Z]	<drummond>	mtfk_robert: prefers having the option to reference a key using a parameter
[2019-06-06T21:16:12.269Z]	<kyle_denhartog>	q+
[2019-06-06T21:16:31.858Z]	<dmitriz>	ok, but #<id of any object> is a /general purpose/ mechanism
[2019-06-06T21:16:45.797Z]	<dmitriz>	otherwise, we'll have to reserve a matrix param for every single object within a did? that doesn't make sense
[2019-06-06T21:16:55.998Z]	<drummond>	markus_sabadello: Slight preference for having it; it's consistent with the "service" parameter
[2019-06-06T21:17:02.974Z]	<dmitriz>	q+
[2019-06-06T21:17:18.939Z]	<chrisboscolo>	q+
[2019-06-06T21:17:29.255Z]	<drummond>	kyle_denhartog: If we do support both, we need to make it required
[2019-06-06T21:17:31.326Z]	<mtfk_robert>	q+
[2019-06-06T21:17:41.887Z]	<drummond>	ack kyle_denhartog
[2019-06-06T21:17:52.855Z]	<drummond>	ack dmitriz
[2019-06-06T21:17:55.733Z]	<rhiaro>	I think we can't require implementations support any specific matrix params because not all DIRs will have the technical capabilities to do them all
[2019-06-06T21:18:44.357Z]	<dmitriz>	rhiaro: that's a separate issue though
[2019-06-06T21:19:01.761Z]	<dmitriz>	implementations who don't support any matrix param .. are compliant with a smaller subset of the spec.
[2019-06-06T21:19:06.740Z]	<markus_sabadello>	dmitriz: the risk is that may have linear explosion of matrix parameter, for every section of a DID document, including "authentication", etc. the hash fragment syntax already provides a generic mechanism for reference ANYTHING in a DID document
[2019-06-06T21:19:09.249Z]	<rhiaro>	dmitriz didn't someone just say they can't be optional?
[2019-06-06T21:19:35.840Z]	<drummond>	q?
[2019-06-06T21:19:51.247Z]	<drummond>	ack chrisboscolo
[2019-06-06T21:20:07.267Z]	<drummond>	chrisboscolo: Is "none of the above" an option?
[2019-06-06T21:20:16.664Z]	<kyle_denhartog>	@rhiaro yes, I did. I see you're point and will have to think about it more.
[2019-06-06T21:20:18.064Z]	<markus_sabadello>	chrisboscolo: one guiding principle should be simplicity
[2019-06-06T21:20:49.589Z]	<drummond>	...since we are designing security infrastructure, the simpler it is, the better. More doodads equals more chances to screw up.
[2019-06-06T21:20:52.458Z]	<drummond>	q?
[2019-06-06T21:20:55.132Z]	<markus_sabadello>	chrisboscolo: the more features we have, the more we risk bad implementations with security issues
[2019-06-06T21:20:58.647Z]	<drummond>	q+
[2019-06-06T21:21:00.677Z]	<rhiaro>	kyle_denhartog, there has been some discussion of this on the original PR which had all of the params in
[2019-06-06T21:21:41.375Z]	<drummond>	mtfk_robert: Asks if you can both a matrix parameter and a fragment. And can you address more than one.
[2019-06-06T21:21:45.642Z]	<drummond>	q?
[2019-06-06T21:21:48.905Z]	<markus_sabadello>	ack mtfk_robert
[2019-06-06T21:21:59.126Z]	<dmitriz>	according to our ABNF, yes, you can have both
[2019-06-06T21:22:25.378Z]	<mtfk_robert>	both means two fragment in the same time?
[2019-06-06T21:22:32.967Z]	<markus_sabadello>	q+
[2019-06-06T21:22:57.540Z]	<dmitriz>	ok, as far as two fragments, there's a separate spec. Which is a way to use query fragments inside hashes. So: url#key1=value1&key2=value2
[2019-06-06T21:23:21.603Z]	<dmitriz>	but I would definitely question the use case for that
[2019-06-06T21:23:25.416Z]	<drummond>	q/
[2019-06-06T21:23:31.524Z]	<drummond>	ack drummond
[2019-06-06T21:24:06.897Z]	<mtfk_robert>	q+
[2019-06-06T21:24:30.009Z]	<drummond>	markus_sabadello: You cannot use a matrix parameter to select a key and a fragment to select another key.
[2019-06-06T21:24:49.748Z]	<drummond>	...however you could use a matrix parameter to select more than one key.
[2019-06-06T21:24:54.717Z]	<drummond>	q?
[2019-06-06T21:25:02.480Z]	<drummond>	ack markus_sabadello
[2019-06-06T21:25:13.909Z]	<drummond>	ack mtfk_robert
[2019-06-06T21:26:33.484Z]	<drummond>	mtfk_robert: could you have two fragments for selecting two different keys?
[2019-06-06T21:26:37.362Z]	<drummond>	drummond: No
[2019-06-06T21:27:24.093Z]	<dmitriz>	I agree, I'm also not sure we should support this
[2019-06-06T21:27:26.636Z]	<drummond>	mtfk_robert: so you would need matrix parameters to select more than one key
[2019-06-06T21:27:32.260Z]	<dmitriz>	cause now we're basically saying "how can I stuff two URLs into one"?
[2019-06-06T21:28:29.135Z]	<dmitriz>	why not just use an array?
[2019-06-06T21:29:52.950Z]	<chrisboscolo>	q+
[2019-06-06T21:30:07.331Z]	<drummond>	ack chrisboscolo
[2019-06-06T21:30:33.148Z]	<drummond>	chrisboscolo: The more we hear questions about, "What does this mean", it's a clue as to whether it's really needed.
[2019-06-06T21:30:55.337Z]	<drummond>	...But wants to ask the question about key typeâ€”what it means.
[2019-06-06T21:31:28.760Z]	<drummond>	q?
[2019-06-06T21:31:29.920Z]	<mtfk_robert>	I think that the main point for key matrix parameter is that we need it as you can not have fragment for the service and the key in the same time.
[2019-06-06T21:33:14.256Z]	<mtfk_robert>	q+
[2019-06-06T21:33:44.677Z]	<drummond>	drummond: the key type should be defined completely in the key type registry
[2019-06-06T21:34:25.586Z]	<drummond>	mtfk_robert: the specification should be clear about exactly what the properties of a specific key type
[2019-06-06T21:34:29.069Z]	<markus_sabadello>	https://w3c-ccg.github.io/ld-cryptosuite-registry/
[2019-06-06T21:35:02.566Z]	<mtfk_robert>	https://w3c-ccg.github.io/did-spec/contexts/did-v1.jsonld < if you take a look here you will find this what markus posted above.
[2019-06-06T21:36:17.612Z]	<drummond>	chrisboscolo: Just looking for more context on why key-type might be used.
[2019-06-06T21:37:45.435Z]	<markus_sabadello>	drummond: Key types can be standardized via the registry, whereas key IDs may be different for every DID Document
[2019-06-06T21:38:16.120Z]	<markus_sabadello>	dmitriz: wouldn't we select keys using a query language?
[2019-06-06T21:38:17.597Z]	<dmitriz>	ok but why not use query params?
[2019-06-06T21:38:40.906Z]	<dmitriz>	be like, did=did:example:whatever&key-type=RSA&...
[2019-06-06T21:38:49.984Z]	<dmitriz>	like, that's exactly what url query params are for
[2019-06-06T21:38:52.619Z]	<drummond>	q?
[2019-06-06T21:39:03.273Z]	<drummond>	ack mtfk_robert
[2019-06-06T21:40:12.263Z]	<drummond>	jonathan: the use case would be that if you have a key type for a specific curve, then you can do a handshake of a specific type.
[2019-06-06T21:40:15.598Z]	<drummond>	q?
[2019-06-06T21:40:24.319Z]	<dmitriz>	jonathan: why not use query params for that?
[2019-06-06T21:40:31.210Z]	<dmitriz>	why use matrix?
[2019-06-06T21:41:01.680Z]	<dmitriz>	because there definitely is a linear explosion here. are we gonna reserve a <whatever>-type matrix parameter for every type of anything?
[2019-06-06T21:41:05.163Z]	<dmitriz>	like, that doesn't make sense...
